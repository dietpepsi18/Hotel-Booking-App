let express,formidable,create,hotels,image,sellerHotels,remove,read,update,userHotelBookings,isAlreadyBooked,searchListings,requireSignin,hotelOwner;_9b3‍.w("express",[["default",["express"],function(v){express=v}]]);_9b3‍.w("express-formidable",[["default",["formidable"],function(v){formidable=v}]]);_9b3‍.w("../controllers/hotel",[["create",["create"],function(v){create=v}],["hotels",["hotels"],function(v){hotels=v}],["image",["image"],function(v){image=v}],["sellerHotels",["sellerHotels"],function(v){sellerHotels=v}],["remove",["remove"],function(v){remove=v}],["read",["read"],function(v){read=v}],["update",["update"],function(v){update=v}],["userHotelBookings",["userHotelBookings"],function(v){userHotelBookings=v}],["isAlreadyBooked",["isAlreadyBooked"],function(v){isAlreadyBooked=v}],["searchListings",["searchListings"],function(v){searchListings=v}]]);_9b3‍.w("../middlewares",[["requireSignin",["requireSignin"],function(v){requireSignin=v}],["hotelOwner",["hotelOwner"],function(v){hotelOwner=v}]]);//routes for hotels updating and creating















 //to make sure this is a logged in user

const router = express.Router();

router.post("/create-hotel", requireSignin, formidable(), create); //use formidable as middleware so that server can accept form data
router.get("/hotels", hotels); //for showing all the hotels
router.get("/hotel/image/:hotelId", image); // for showing hotel image
router.get("/seller-hotels", requireSignin, sellerHotels);
router.delete("/delete-hotel/:hotelId", requireSignin, hotelOwner, remove);
router.get("/hotel/:hotelId", read);
router.put(
  "/update-hotel/:hotelId",
  requireSignin,
  hotelOwner,
  formidable(),
  update
);
router.get("/user-hotel-bookings", requireSignin, userHotelBookings);
router.get("/is-already-booked/:hotelId", requireSignin, isAlreadyBooked);
router.post("/search-listings", searchListings);

module.exports = router;
